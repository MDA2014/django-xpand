«IMPORT similuml»
«IMPORT template»
«EXTENSION template::GeneratorExtensions»

«REM»
Creación de vistas de la aplicación Django
Archivo generado: views.py
«ENDREM»

«REM»Creación del archivo de vistas«ENDREM»
«DEFINE main FOR DiagramaClases»
    «FILE 'views.py'-»
from django.shortcuts import render_to_response, get_object_or_404
from django.http import HttpResponse, HttpResponseRedirect
from django.core import serializers
from django.core.urlresolvers import reverse_lazy
from django.template import RequestContext
from django.views.generic import CreateView, UpdateView

import json

from .models import «EXPAND django_global::nombre FOREACH clases_del_Diagrama SEPARATOR ', '»
from .forms import «EXPAND formularioClase FOREACH clases_del_Diagrama SEPARATOR ', '»
«EXPAND importacionFormset FOREACH clases_del_Diagrama»

# Índice
def index(request):
    return render_to_response('gen/index.html',
                              context_instance=RequestContext(request),
                              )

«EXPAND vistasClase FOREACH clases_del_Diagrama-»
    «ENDFILE»
«ENDDEFINE»


«REM»Listado de vistas por clase«ENDREM»
«DEFINE vistasClase FOR Clase»
# Clase: «EXPAND django_global::nombre FOR this»
## Vistas genéricas
«EXPAND vistaCrear FOR this»
«EXPAND vistaEditar FOR this»
«EXPAND vistaEliminar FOR this»
«EXPAND vistaDetallar FOR this»
«EXPAND vistaListar FOR this»

## Vistas JSON
«EXPAND vistaDetallarJson FOR this»
«EXPAND vistaListarJson FOR this»
«ENDDEFINE»


«REM»Vista Crear de la clase«ENDREM»
«DEFINE vistaCrear FOR Clase»
class «EXPAND django_global::nombreMinus FOR this»_crear(CreateView):
    model = «EXPAND django_global::nombre FOR this»
    form_class = «EXPAND django_global::nombreMinus FOR this»_form
    template_name_suffix = '_form'
    success_url = reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar')
    
    «IF !this.asociaciones_contenidas.isEmpty-»
    «EXPAND administracionFormsetCrear FOR this-»
    
    «EXPAND formularioValido FOR this-»
    «ENDIF»    
«ENDDEFINE»


«REM»Vista Editar de la clase«ENDREM»
«DEFINE vistaEditar FOR Clase»
class «EXPAND django_global::nombreMinus FOR this»_editar(UpdateView):
    model = «EXPAND django_global::nombre FOR this»
    form_class = «EXPAND django_global::nombreMinus FOR this»_form
    template_name_suffix = '_form'
    success_url = reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar')
    
    «IF !this.asociaciones_contenidas.isEmpty-»
    «EXPAND administracionFormsetEditar FOR this-»
    
    «EXPAND formularioValido FOR this-»
    «ENDIF» 
«ENDDEFINE»


«REM»Vista Eliminar de la clase«ENDREM»
«DEFINE vistaEliminar FOR Clase»
def «EXPAND django_global::nombreMinus FOR this»_eliminar(request, pk):
    instancia = «EXPAND django_global::nombre FOR this».objects.get(pk=pk)
    instancia.delete()
    return HttpResponseRedirect(reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar'))
«ENDDEFINE»


«REM»Vista Detallar de la clase«ENDREM»
«DEFINE vistaDetallar FOR Clase»
def «EXPAND django_global::nombreMinus FOR this»_detallar(request):
    return render_to_response('gen/«EXPAND django_global::nombreMinus FOR this»_detallar.html',
                              context_instance=RequestContext(request),
                              )
«ENDDEFINE»


«REM»Vista Listar de la clase«ENDREM»
«DEFINE vistaListar FOR Clase»
def «EXPAND django_global::nombreMinus FOR this»_listar(request):
    return render_to_response('gen/«EXPAND django_global::nombreMinus FOR this»_listar.html',
                              context_instance=RequestContext(request),
                              )
«ENDDEFINE»


«REM»Vista Detallar de la clase, en JSON«ENDREM»
«DEFINE vistaDetallarJson FOR Clase»
def «EXPAND django_global::nombreMinus FOR this»_detallar_json(request, pk):
    object = get_object_or_404(«EXPAND django_global::nombre FOR this», pk=pk)
    data = serializers.serialize('json', [object])
    return HttpResponse(data, content_type='application/json; charset=utf-8')
«ENDDEFINE»


«REM»Vista Listar de la clase, en JSON«ENDREM»
«DEFINE vistaListarJson FOR Clase»
def «EXPAND django_global::nombreMinus FOR this»_listar_json(request):
    data = serializers.serialize('json', «EXPAND django_global::nombre FOR this».objects.all())
    return HttpResponse(data, content_type='application/json; charset=utf-8')
«ENDDEFINE»


«REM»Importación de formulario de la clase«ENDREM»
«DEFINE formularioClase FOR Clase-»
«EXPAND django_global::nombreMinus FOR this»_form«ENDDEFINE»


«REM»Importación de formsets de la clase«ENDREM»
«DEFINE importacionFormset FOR Clase-»
«IF !this.asociaciones_contenidas.isEmpty-»
from .forms import «EXPAND django_global::nombreFormset FOREACH this.asociaciones_contenidas SEPARATOR ', '-»
«ENDIF»
«ENDDEFINE»


«REM»Administración de formsets en el formulario de creación de la clase«ENDREM»
«DEFINE administracionFormsetCrear FOR Clase»
    def get_context_data(self, **kwargs):
        context = super(«EXPAND django_global::nombreMinus FOR this»_crear, self).get_context_data(**kwargs)
        if self.request.POST:
            «EXPAND contextoFormsetPost FOREACH this.asociaciones_contenidas»
        else:
            «EXPAND contextoFormsetGetCrear FOREACH this.asociaciones_contenidas»
        return context
«ENDDEFINE»


«REM»Administración de formsets en el formulario de edición de la clase«ENDREM»
«DEFINE administracionFormsetEditar FOR Clase»
    def get_context_data(self, **kwargs):
        context = super(«EXPAND django_global::nombreMinus FOR this»_editar, self).get_context_data(**kwargs)
        if self.request.POST:
            «EXPAND contextoFormsetPost FOREACH this.asociaciones_contenidas»
        else:
            «EXPAND contextoFormsetGetEditar FOREACH this.asociaciones_contenidas»
        return context
«ENDDEFINE»


«REM»Generación de formsets en contexto para solicitud POST«ENDREM»
«DEFINE contextoFormsetPost FOR Asociacion-»
            context['«EXPAND django_global::nombreFormset FOR this»'] = «EXPAND django_global::nombreFormset FOR this»(self.request.POST)«ENDDEFINE»


«REM»Generación de formsets en contexto de formulario de creación, para solicitud GET«ENDREM»
«DEFINE contextoFormsetGetCrear FOR Asociacion-»
                context['«EXPAND django_global::nombreFormset FOR this»'] = «EXPAND django_global::nombreFormset FOR this»(
                  queryset=«EXPAND django_global::nombre FOR this.destino».objects.none())«ENDDEFINE»


«REM»Generación de formsets en contexto de formulario de edición, para solicitud GET«ENDREM»
«DEFINE contextoFormsetGetEditar FOR Asociacion-»
            if (self.object.«this.nombre.toFirstLower()»):
                context['«EXPAND django_global::nombreFormset FOR this»'] = «EXPAND django_global::nombreFormset FOR this»(
                  queryset=«EXPAND django_global::nombre FOR this.destino».objects.filter(pk=self.object.«this.nombre.toFirstLower()».pk))
            else:
                context['«EXPAND django_global::nombreFormset FOR this»'] = «EXPAND django_global::nombreFormset FOR this»(
                  queryset=«EXPAND django_global::nombre FOR this.destino».objects.none())«ENDDEFINE»


«REM»Persistencia de datos introducidos en formulario con formsets válidos«ENDREM»
«DEFINE formularioValido FOR Clase-»
    def form_valid(self, form):
        context = self.get_context_data()
        «EXPAND formsetContexto FOREACH this.asociaciones_contenidas»
        if «EXPAND formsetValido FOREACH this.asociaciones_contenidas SEPARATOR ' and '»:
            self.object = form.save()
            «EXPAND formsetInstancia FOREACH this.asociaciones_contenidas»
            «EXPAND formsetGuardado FOREACH this.asociaciones_contenidas»
            «EXPAND formsetAsociacion FOREACH this.asociaciones_contenidas»
            self.object.save()
            return HttpResponseRedirect(reverse_lazy('gen:«EXPAND django_global::nombreMinus FOR this»_listar'))
        else:
            return self.render_to_response(self.get_context_data(form=form))
«ENDDEFINE»


«REM»Obtención de formset desde el contexto de la solicitud«ENDREM»
«DEFINE formsetContexto FOR Asociacion-»
        «this.nombre.toFirstLower()»_form = context['«EXPAND django_global::nombreFormset FOR this»']«ENDDEFINE»


«REM»Validación del formset«ENDREM»
«DEFINE formsetValido FOR Asociacion-»
«this.nombre.toFirstLower()»_form.is_valid()«ENDDEFINE»


«REM»Instanciación del objeto relacionado al formset«ENDREM»
«DEFINE formsetInstancia FOR Asociacion-»
            «this.nombre.toFirstLower()»_form.instance = self.object«ENDDEFINE»


«REM»Persistencia de la información del formset«ENDREM»
«DEFINE formsetGuardado FOR Asociacion-»
            «this.nombre.toFirstLower()»_list = «this.nombre.toFirstLower()»_form.save()«ENDDEFINE»


«REM»Creación de la asociación entre clase del formset y clase del formulario«ENDREM»
«DEFINE formsetAsociacion FOR Asociacion-»
            if («this.nombre.toFirstLower()»_list):
                self.object.«this.nombre.toFirstLower()» = «this.nombre.toFirstLower()»_list.pop()«ENDDEFINE»